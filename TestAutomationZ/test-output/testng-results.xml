<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="11732" started-at="2018-12-29T08:26:22Z" finished-at="2018-12-29T08:26:34Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="11732" started-at="2018-12-29T08:26:22Z" finished-at="2018-12-29T08:26:34Z">
      <class name="com.testng.testng.web.WebTest">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.testng.testng.web.WebTest@313b2ea6]" name="BeforeClass" is-config="true" duration-ms="0" started-at="2018-12-29T08:26:23Z" finished-at="2018-12-29T08:26:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="f(TestAutomationZ.Case.CaseModel)[pri:0, instance:com.testng.testng.web.WebTest@313b2ea6]" name="f" duration-ms="8590" started-at="2018-12-29T08:26:23Z" data-provider="dp" finished-at="2018-12-29T08:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseModel [caseName=百度搜索, stepModels=[StepModel [step=打开搜百度首页, Element=ElementModel [elementName=百度url, elementValue=https://www.baidu.com/, elementByType=url]
, action=get
, value=null, expect=null]
, StepModel [step=输入测试, Element=ElementModel [elementName=搜索输入框, elementValue=//*[@id="kw"], elementByType=XPath]
, action=sendkeys
, value=测试, expect=null]
, StepModel [step=点击搜索, Element=ElementModel [elementName=搜索按钮, elementValue=//*[@id="su"], elementByType=XPath]
, action=click
, value=null, expect=null]
, StepModel [step=检查搜索结果, Element=ElementModel [elementName=关键字标记, elementValue=//em[1], elementByType=XPath]
, action=gettext
, value=测试, expect=测试]
]]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="FAIL" signature="f(TestAutomationZ.Case.CaseModel)[pri:0, instance:com.testng.testng.web.WebTest@313b2ea6]" name="f" duration-ms="2226" started-at="2018-12-29T08:26:31Z" data-provider="dp" finished-at="2018-12-29T08:26:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseModel [caseName=错误用例, stepModels=[StepModel [step=打开搜百度首页, Element=ElementModel [elementName=百度url, elementValue=https://www.baidu.com/, elementByType=url]
, action=get
, value=null, expect=null]
, StepModel [step=输入测试, Element=ElementModel [elementName=搜索输入框, elementValue=//*[@id="kw"], elementByType=XPath]
, action=sendkeys
, value=测试, expect=null]
, StepModel [step=点击搜索, Element=ElementModel [elementName=搜索按钮, elementValue=//*[@id="su"], elementByType=XPath]
, action=click
, value=null, expect=null]
, StepModel [step=检查搜索结果, Element=ElementModel [elementName=关键字标记, elementValue=//em[1], elementByType=XPath]
, action=gettext
, value=测试, expect=测试1]
]]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [测试] but found [测试1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [测试] but found [测试1]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at org.testng.asserts.Assertion$11.doAssert(Assertion.java:201)
at org.testng.asserts.Assertion.executeAssert(Assertion.java:30)
at org.testng.asserts.Assertion.doAssert(Assertion.java:15)
at org.testng.asserts.Assertion.assertEquals(Assertion.java:198)
at TestAutomationZ.Selenium.WebElementZ.ElementAction(WebElementZ.java:71)
at com.testng.testng.web.WebTest.doCase(WebTest.java:65)
at com.testng.testng.web.WebTest.f(WebTest.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.testng.testng.web.WebTest@313b2ea6]" name="AfterClass" is-config="true" duration-ms="605" started-at="2018-12-29T08:26:33Z" finished-at="2018-12-29T08:26:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.testng.testng.web.WebTest -->
      <class name="com.testng.testng.api.APITest">
        <test-method status="PASS" signature="f(TestAutomationZ.apiCase.APICaseModel)[pri:0, instance:com.testng.testng.api.APITest@394a2528]" name="f" duration-ms="133" started-at="2018-12-29T08:26:22Z" data-provider="dp" finished-at="2018-12-29T08:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseModel [caseName=查询用户名, stepModels=[StepModel [step=查询已存在的用户, url=http://localhost:8080/selectUser, action=get
, value={param:{'name':'123'},headers:{"Cookie":"testcookie=test"}}, expect={"body":{"result":"用户名已存在"},"status":"成功"}]
]]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="f(TestAutomationZ.apiCase.APICaseModel)[pri:0, instance:com.testng.testng.api.APITest@394a2528]" name="f" duration-ms="110" started-at="2018-12-29T08:26:23Z" data-provider="dp" finished-at="2018-12-29T08:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseModel [caseName=查询不存在的用户, stepModels=[StepModel [step=查询不存在的用户, url=http://localhost:8080/selectUser, action=get
, value={param:{'name':'fdsafdsa'}}, expect={"body":{"result":"用户名不存在"},"status":"成功"}]
]]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="FAIL" signature="f(TestAutomationZ.apiCase.APICaseModel)[pri:0, instance:com.testng.testng.api.APITest@394a2528]" name="f" duration-ms="30" started-at="2018-12-29T08:26:23Z" data-provider="dp" finished-at="2018-12-29T08:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseModel [caseName=用户注册, stepModels=[StepModel [step=正确注册, url=http://localhost:8080/register, action=post
, value={param:{'user':'testname','pwd':'000000'}}, expect={"body":{"result":{"user":"testname","pwd":"000000"}},"status":"成功"}]
]]
]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [{"body":{"result":{"user":"testname","pwd":"000000"}},"status":"成功"}] but found [{"body":{"result":"换个用户名"},"status":"失败"}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [{"body":{"result":{"user":"testname","pwd":"000000"}},"status":"成功"}] but found [{"body":{"result":"换个用户名"},"status":"失败"}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.testng.testng.api.APITest.doCase(APITest.java:38)
at com.testng.testng.api.APITest.f(APITest.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="f(TestAutomationZ.apiCase.APICaseModel)[pri:0, instance:com.testng.testng.api.APITest@394a2528]" name="f" duration-ms="6" started-at="2018-12-29T08:26:23Z" data-provider="dp" finished-at="2018-12-29T08:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CaseModel [caseName=不传用户名注册, stepModels=[StepModel [step=不输入用户名, url=http://localhost:8080/register, action=post
, value={param:{'pwd':'000000'}}, expect={"body":{"result":"用户名或密码不能为空"},"status":"失败"}]
]]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- com.testng.testng.api.APITest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
